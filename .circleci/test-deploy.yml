version: 2.1
orbs:
  # Your orb will be automatically injected here during the pipeline.
  # Reference your orb's jobs and commands below as they will exist when built.
  orb-tools: circleci/orb-tools@12.0
  # The orb definition is intentionally not included here. It will be injected into the pipeline.
  cloudsmith-circleci: {}

# Use this tag to ensure test jobs always run,
# even though the downstream publish job will only run on release tags.
filters: &filters
  tags:
    only: /.*/

# Filter for release tags.
release-filters: &release-filters
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

jobs:
  # Create jobs to test the commands of your orbs.
  # You may want to add additional validation steps to ensure the commands are working as expected.

  test-authenticate_with_oidc:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - cloudsmith-circleci/authenticate_with_oidc:
          service_account: "circleci-orb-testing"
      - run:
          name: Assert environment variables have been set
          command: | 
            if [ $CLOUDSMITH_ORGANISATION != "financial-times" ]
            then
              echo "Test failed: CLOUDSMITH_ORGANISATION has not been set correctly."
              exit 1
            fi
            if [ $CLOUDSMITH_SERVICE_ACCOUNT != "circleci-orb-testing" ]
            then
              echo "Test failed: CLOUDSMITH_SERVICE_ACCOUNT has not been set."
              exit 1
            fi
            if [ -z $CLOUDSMITH_OIDC_TOKEN ]
            then
              echo "Test failed: CLOUDSMITH_OIDC_TOKEN has not been set."
              exit 1
            fi
            echo "All tests passed."

  test-set_env_vars_for_pip:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - cloudsmith-circleci/set_env_vars_for_pip:
          repository: "circleci-orb-testing"
          service_account: "circleci-orb-testing"
      - run:
          name: Assert environment variables have been set
          command: | 
            if [ $CLOUDSMITH_DOWNLOADS_DOMAIN != "packages.ft.com" ]
            then
              echo "Test failed: CLOUDSMITH_DOWNLOADS_DOMAIN has not been set correctly."
              exit 1
            fi
            if [ -z $CLOUDSMITH_PIP_INDEX_URL ]
            then
              echo "Test failed: CLOUDSMITH_PIP_INDEX_URL has not been set."
              exit 1
            fi
            echo "All tests passed."

  test-python_version:
    docker:
      - image: cimg/base:2023.01
    steps:
      - checkout
      - run: python --version

workflows:
  test-deploy:
    jobs:
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      # Test your orb's commands in a custom job and test your orb's jobs directly as a part of this workflow.
      - test-authenticate_with_oidc:
          context: circleci-orb-publishing
          filters: *filters
      - test-set_env_vars_for_pip:
          context: circleci-orb-publishing
          filters: *filters
      - test-python_version:
          context: circleci-orb-publishing
          filters: *filters
      # The orb must be re-packed for publishing, and saved to the workspace.
      - orb-tools/pack:
          filters: *release-filters
      - orb-tools/publish:
          orb_name: financial-times/cloudsmith-circleci
          vcs_type: << pipeline.project.type >>
          pub_type: production
          # Ensure this job requires all test jobs and the pack job.
          requires:
            - orb-tools/pack
            - test-authenticate_with_oidc
            - test-set_env_vars_for_pip
            - test-python_version
          # Use a context to hold your publishing token.
          context: circleci-orb-publishing
          filters: *release-filters
